services:
  ngrok:
    image: ngrok/ngrok:latest
    command: >
      sh -c "ngrok config add-authtoken 2mG8XgY5cs8BG4ZtKhUa2vfKjF4_7XQ5pfG8oFomPED23ttjB &&
            ngrok tunnel --url=pangolin-happy-grackle.ngrok-free.app --addr=app:8000"
    depends_on:
      - app
    restart: always

  db:
    image: postgres:15
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-app_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    restart: always
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    env_file: .env
    environment:
      - DATABASE_URL=postgresql+asyncpg://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@db:${DB_PORT:-5432}/${DB_NAME:-app_db}
      - REDIS_URL=redis://redis:${REDIS_PORT:-6379}/0
      - APP_PORT=${APP_PORT:-8000}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${APP_PORT:-8000}:8000"

  worker:
    build: .
    command: python -m celery -A app.core.celery_app.celery_app worker --loglevel=info
    env_file: .env
    environment:
      - REDIS_URL=redis://redis:${REDIS_PORT:-6379}/0
    depends_on:
      - redis

volumes:
  postgres_data:

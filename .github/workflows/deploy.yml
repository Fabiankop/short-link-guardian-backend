name: Terraform Deploy EC2 and Deploy App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform -chdir=infra init

    - name: Terraform Apply
      run: terraform -chdir=infra apply -auto-approve -var="ec2_public_key=${{ secrets.EC2_KEY }}"

    - name: Get EC2 IP
      id: ec2_ip
      run: |
        IP=$(terraform -chdir=infra output -raw instance_public_ip)
        echo "EC2_IP=$IP" >> $GITHUB_ENV
        echo "::add-mask::$IP"

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "$EC2_IP" >> ~/.ssh/known_hosts

    - name: Copy project to EC2
      run: |
        rsync -avz --delete \
          -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
          ./ ${{ secrets.EC2_USER }}@$EC2_IP:/home/${{ secrets.EC2_USER }}/app

    - name: Deploy with Docker Compose
      run: |
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@$EC2_IP << 'EOF'
          cd ~/app
          docker compose down
          docker compose up -d --build
        EOF
